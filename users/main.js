// Generated by LiveScript 1.6.0
(function(){
  var split$ = ''.split;
  $(function(){
    var origin, url, connection;
    origin = "http://direct.moedict.tw/";
    url = 'https://goinstant.net/poga/yhd2013-moe-users';
    window.id = 'users';
    $(document).on('click', 'span', function(it){
      return window.output($(it.target).text());
    });
    connection = new goinstant.Connection(url);
    return connection.connect(function(){
      var room;
      room = connection.room("game");
      return room.join(function(){
        var userList;
        userList = new goinstant.widgets.UserList({
          room: room,
          collapsed: false,
          position: 'left',
          userOptions: false
        });
        window.reset = function(){
          return room.self().key('displayName').set('Ëêå');
        };
        window.input = function(it){
          var text;
          text = it;
          return room.self().key('displayName').get(function(err, v, ctx){
            if (err) {
              connect.log(err);
            }
            return room.self().key('displayName').set(text + " " + v);
          });
        };
        window.output = function(it){
          var ref$;
          if (window.muted) {
            return;
          }
          input(it);
          return typeof (ref$ = window.parent).post == 'function' ? ref$.post(it, window.id) : void 8;
        };
        return userList.initialize(function(){
          window.reset();
          return window.setInterval(function(){
            $(".gi-user").each(function(i, x){
              if ($(x).text().match(/cf-tick/)) {
                return $(x).text("");
              }
            });
            return $('.gi-name:not(.segmented)').each(function(){
              var i$, ref$, len$, seg, results$ = [];
              $(this).addClass('segmented');
              $(this).find('span').hide();
              for (i$ = 0, len$ = (ref$ = split$.call($(this).text(), /\s+/)).length; i$ < len$; ++i$) {
                seg = ref$[i$];
                if (/[^\s.a-zA-Z]/.exec(seg)) {
                  results$.push($(this).append($('<span/>').text(seg)));
                }
              }
              return results$;
            });
          }, 100);
        });
      });
    });
  });
}).call(this);
